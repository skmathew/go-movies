{"ast":null,"code":"var _jsxFileName = \"/Users/sherinmathew/Desktop/Projects/testProject/go-movies/frontend-app/src/components/Movies.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Movies extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      movies: [],\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:4000/v1/movies\").then(response => response.json()).then(json => {\n      this.setState({\n        movies: json.movies,\n        isLoaded: true\n      });\n    });\n  }\n\n  render() {\n    const {\n      movies,\n      isLoaded\n    } = this.state;\n\n    if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 20\n      }, this);\n    }\n\n    els;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Choose a movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.movies.map(m => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/movies/${m.id}`,\n            children: m.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this)\n        }, m.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/sherinmathew/Desktop/Projects/testProject/go-movies/frontend-app/src/components/Movies.js"],"names":["React","Component","Fragment","Link","Movies","state","movies","isLoaded","componentDidMount","fetch","then","response","json","setState","render","els","map","m","id","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,eAAe,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAAA;AAAA;AAAA,SAE1CI,KAF0C,GAElC;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KAFkC;AAAA;;AAO1CC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,iCAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOE,IAAD,IAAU;AACZ,WAAKC,QAAL,CAAc;AACVP,QAAAA,MAAM,EAAEM,IAAI,CAACN,MADH;AAEVC,QAAAA,QAAQ,EAAE;AAFA,OAAd;AAKH,KARD;AASH;;AAGDO,EAAAA,MAAM,GAAG;AACL,UAAM;AAACR,MAAAA,MAAD;AAASC,MAAAA;AAAT,QAAuB,KAAKF,KAAlC;;AACA,QAAI,CAACE,QAAL,EAAe;AACX,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AAACQ,IAAAA,GAAG;AAGL,wBACI,QAAC,QAAD;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBACK,KAAKV,KAAL,CAAWC,MAAX,CAAkBU,GAAlB,CAAuBC,CAAD,iBACnB;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAG,WAAUA,CAAC,CAACC,EAAG,EAA1B;AAAA,sBAA8BD,CAAC,CAACE;AAAhC;AAAA;AAAA;AAAA;AAAA;AADJ,WAASF,CAAC,CAACC,EAAX;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH;;AAzCyC","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Movies extends Component {\n\n    state = {\n        movies: [],\n        isLoaded: false,\n    }\n\n    componentDidMount() {\n        fetch(\"http://localhost:4000/v1/movies\")\n        .then((response) => response.json())\n        .then((json) => {\n            this.setState({\n                movies: json.movies,\n                isLoaded: true,\n            })\n\n        })\n    }\n\n\n    render() {\n        const {movies, isLoaded } =  this.state\n        if (!isLoaded) {\n            return <p>Loading....</p>\n        } els\n\n\n        return(\n            <Fragment>\n                <h2>Choose a movie</h2>\n                <ul>\n                    {this.state.movies.map((m) =>(\n                        <li key={m.id}>\n                            <Link to={`/movies/${m.id}`}>{m.title}</Link>\n                        </li>\n                    ))}\n                </ul>\n\n\n            </Fragment>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}