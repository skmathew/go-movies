[{"/Users/sherinmathew/Desktop/Projects/testProject/go-movies/client/src/index.js":"1","/Users/sherinmathew/Desktop/Projects/testProject/go-movies/client/src/App.js":"2","/Users/sherinmathew/Desktop/Projects/testProject/go-movies/client/src/components/Movies.js":"3","/Users/sherinmathew/Desktop/Projects/testProject/go-movies/client/src/components/Home.js":"4","/Users/sherinmathew/Desktop/Projects/testProject/go-movies/client/src/components/Admin.js":"5","/Users/sherinmathew/Desktop/Projects/testProject/go-movies/client/src/components/Genres.js":"6","/Users/sherinmathew/Desktop/Projects/testProject/go-movies/client/src/components/OneMovie.js":"7","/Users/sherinmathew/Desktop/Projects/testProject/go-movies/client/src/components/OneGenre.js":"8","/Users/sherinmathew/Desktop/Projects/testProject/go-movies/client/src/components/EditMovie.js":"9","/Users/sherinmathew/Desktop/Projects/testProject/go-movies/client/src/components/form-components/Input.js":"10","/Users/sherinmathew/Desktop/Projects/testProject/go-movies/client/src/components/form-components/TextArea.js":"11","/Users/sherinmathew/Desktop/Projects/testProject/go-movies/client/src/components/form-components/Select.js":"12"},{"size":319,"mtime":1650240759131,"results":"13","hashOfConfig":"14"},{"size":2159,"mtime":1652584190249,"results":"15","hashOfConfig":"14"},{"size":1665,"mtime":1653250928087,"results":"16","hashOfConfig":"14"},{"size":166,"mtime":1650250853779,"results":"17","hashOfConfig":"14"},{"size":184,"mtime":1650250539484,"results":"18","hashOfConfig":"14"},{"size":1854,"mtime":1653250906246,"results":"19","hashOfConfig":"14"},{"size":2992,"mtime":1653250972325,"results":"20","hashOfConfig":"14"},{"size":2036,"mtime":1653250955981,"results":"21","hashOfConfig":"14"},{"size":6752,"mtime":1653253795149,"results":"22","hashOfConfig":"14"},{"size":457,"mtime":1652556931865,"results":"23","hashOfConfig":"14"},{"size":468,"mtime":1652572847273,"results":"24","hashOfConfig":"14"},{"size":823,"mtime":1652577127273,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"q8vvfe",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/Users/sherinmathew/Desktop/Projects/testProject/go-movies/client/src/index.js",[],[],[],"/Users/sherinmathew/Desktop/Projects/testProject/go-movies/client/src/App.js",["67","68","69","70"],[],"import React, { Component, Fragment } from 'react';\nimport {BrowserRouter as Router, Switch, Route, Link, useParams, useRouteMatch} from 'react-router-dom';\nimport Movies from './components/Movies';\nimport Admin from './components/Admin';\nimport Home from './components/Home';\nimport OneMovie from './components/OneMovie';\nimport Genres from './components/Genres';\nimport OneGenre from './components/OneGenre';\nimport EditMovie from './components/EditMovie';\n\nexport default function App() {\n  return (\n    <Router>\n    <div className=\"container\">\n\n      <div className=\"row\">\n        <h1 className=\"mt-3\">\n          Go Watch a Movie!\n        </h1>\n        <hr className=\"mb-3\"></hr>\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-md-2\">\n          <nav>\n            <ul className=\"list-group\">\n              <li className=\"list-group-item\">\n                <Link to=\"/\" replace>Home</Link>\n              </li>\n              <li className=\"list-group-item\">\n                <Link to=\"/movies\" replace>Movies</Link>\n              </li>\n              <li className=\"list-group-item\">\n                <Link to=\"/genres\" replace>Genres</Link>\n              </li>\n\n              <li className=\"list-group-item\">\n                <Link to=\"/admin/movie/0\" replace>Add Movie</Link>\n              </li>\n\n              <li className=\"list-group-item\">\n                <Link to=\"/admin\" replace>Manage Catalogue</Link>\n              </li>\n            </ul>\n          </nav>\n        </div>\n\n        <div className=\"col-md-10\">\n          <Switch>\n\n            <Route path=\"/movies/:id\" component={OneMovie} />\n\n            <Route path=\"/movies\">\n              <Movies />\n            </Route>\n\n            <Route path=\"/genre/:id\" component={OneGenre} />\n\n            <Route exact path=\"/genres\">\n              <Genres />\n            </Route>\n\n            <Route path=\"/admin/movie/:id\" component={EditMovie} />\n\n\n\n\n            <Route path=\"/admin\">\n              <Admin />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </div>\n    </Router>\n  );\n}\n\n\n\n","/Users/sherinmathew/Desktop/Projects/testProject/go-movies/client/src/components/Movies.js",["71"],[],"import React, { Component, Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default class Movies extends Component {\n\n    state = {\n        movies: [],\n        isLoaded: false,\n        error: null,\n    };\n\n    componentDidMount() {\n        fetch(\"${process.env.REACT_APP_SERVER_URL}/v1/movies\")\n        //.then((response) => response.json())\n        .then((response) => {\n            console.log(\"Status code is\", response.status);\n            if (response.status !== \"200\") {\n                let err = Error;\n                err.message = \"Invalid response code: \" + response.status;\n                this.setState({error: err});\n            }\n            return response.json();\n        })\n        .then((json) => {\n            this.setState({\n                movies: json.movies,\n                isLoaded: true,\n            },\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                });\n            });\n        });\n    }\n\n\n    render() {\n        const {movies, isLoaded, error } =  this.state\n        if (error) {\n            return <div>Error: {error.message}</div>\n        }\n        else if (!isLoaded) {\n            return <p>Loading....</p>\n        } else {\n        return(\n            <Fragment>\n                <h2>Choose a movie</h2>\n                <div className='list-group'>\n                    {movies.map((m) =>(\n                            <Link key={m.id} className=\"list-group-item list-group-item-action\" to={`/movies/${m.id}`}>{m.title}</Link>\n                    ))}\n                </div>\n\n\n            </Fragment>\n        );\n    }\n    }\n}","/Users/sherinmathew/Desktop/Projects/testProject/go-movies/client/src/components/Home.js",[],[],"/Users/sherinmathew/Desktop/Projects/testProject/go-movies/client/src/components/Admin.js",[],[],"/Users/sherinmathew/Desktop/Projects/testProject/go-movies/client/src/components/Genres.js",[],[],"/Users/sherinmathew/Desktop/Projects/testProject/go-movies/client/src/components/OneMovie.js",["72"],[],"import React, { Component, Fragment } from 'react'\n\n\nexport default class OneMovie extends Component {\n\n    state = {\n        movie: [],\n        isLoaded: false,\n        error: null,\n    };\n\n    componentDidMount() {\n        fetch(\"${process.env.REACT_APP_SERVER_URL}/v1/movie/\" + this.props.match.params.id)\n        //.then((response) => response.json())\n        .then((response) => {\n            console.log(\"Status code is\", response.status);\n            if (response.status !== \"200\") {\n                let err = Error;\n                err.message = \"Invalid response code: \" + response.status;\n                this.setState({error: err});\n            }\n            return response.json();\n        })\n        .then((json) => {\n            this.setState({\n                movie: json.movie,\n                isLoaded: true,\n            },\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                });\n            });\n        });\n    }\n\n\n\n\n    render() {\n\n      const {movie, isLoaded, error } =  this.state;\n      if (movie.genres) {\n          movie.genres = Object.values(movie.genres);\n      } else {\n          movie.genres = [];\n      }\n\n\n        if (error) {\n            return <div>Error: {error.message}</div>\n        }\n        else if (!isLoaded) {\n            return <p>Loading....</p>\n        }\n        else{\n        return (\n            <Fragment>\n                <h2>\n                    Movie: {movie.title} {movie.year}\n                </h2>\n                <div className='float-start'>\n                    <small>Rating: {movie.mpaa_rating}</small>\n                </div>\n\n                <div className='float-end'>\n                    {movie.genres.map((m, index) => (\n                        <span className='badge bg-secondary me-1' key={index}>\n                            {m}\n                        </span>\n\n                    ))}\n                </div>\n                <div className='clearfix'></div>\n                <hr></hr>\n\n\n\n\n                <table className='table table-compact table-striped'>\n                    <thead></thead>\n                    <tbody>\n                        <tr>\n                            <td><strong>Title:</strong></td>\n                            <td>{movie.title}</td>\n                        </tr>\n                        <tr>\n                            <td><strong>Description:</strong></td>\n                            <td>{movie.description}</td>\n                        </tr>\n                        <tr>\n                            <td><strong>Run Time:</strong></td>\n                            <td>{movie.runtime} minutes</td>\n                        </tr>\n                        <tr>\n                            <td><strong>Rating:</strong></td>\n                            <td>{movie.rating} Stars</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </Fragment>\n        )\n        }\n    }\n\n}","/Users/sherinmathew/Desktop/Projects/testProject/go-movies/client/src/components/OneGenre.js",["73"],[],"import React, { Component, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default class OneGenre extends Component {\n\n    state = {\n        movies: [],\n        isLoaded: false,\n        error: null,\n        genreName: \"\"\n    };\n\n    componentDidMount() {\n        fetch(\"${process.env.REACT_APP_SERVER_URL}/v1/movies/\" + this.props.match.params.id)\n        //.then((response) => response.json())\n        .then((response) => {\n            console.log(\"Status code is\", response.status);\n            if (response.status !== \"200\") {\n                let err = Error;\n                err.message = \"Invalid response code: \" + response.status;\n                this.setState({error: err});\n            }\n            return response.json();\n        })\n        .then((json) => {\n            this.setState({\n                movies: json.movies,\n                isLoaded: true,\n                genreName: this.props.location.genreName\n            },\n            (error) => {\n                this.setState({\n                    isLoaded: true,\n                    error\n                });\n            });\n        });\n    }\n\n\n\n\n    render() {\n      let {movies, isLoaded, error, genreName } =  this.state;\n\n      if (!movies) {\n          movies = [];\n      }\n      else if (movies.genres) {\n          movies.genres = Object.values(movies.genres);\n      } else {\n          movies.genres = [];\n      }\n\n\n        if (error) {\n            return <div>Error: {error.message}</div>\n        }\n        else if (!isLoaded) {\n            return <p>Loading....</p>\n        }\n        else {\n            return(\n                <Fragment>\n                    <h2>Genre: {genreName}</h2>\n                    <div className='list-group'>\n                        {movies.map((m) =>(\n                                <Link to={`/movies/${m.id}`} className=\"list-group-item list-group-item-action\">{m.title}</Link>\n                        ))}\n                    </div>\n    \n    \n                </Fragment>\n            );\n        }\n    }\n\n}","/Users/sherinmathew/Desktop/Projects/testProject/go-movies/client/src/components/EditMovie.js",[],[],"/Users/sherinmathew/Desktop/Projects/testProject/go-movies/client/src/components/form-components/Input.js",[],[],"/Users/sherinmathew/Desktop/Projects/testProject/go-movies/client/src/components/form-components/TextArea.js",[],[],"/Users/sherinmathew/Desktop/Projects/testProject/go-movies/client/src/components/form-components/Select.js",[],[],{"ruleId":"74","severity":1,"message":"75","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":26},{"ruleId":"74","severity":1,"message":"78","line":1,"column":28,"nodeType":"76","messageId":"77","endLine":1,"endColumn":36},{"ruleId":"74","severity":1,"message":"79","line":2,"column":55,"nodeType":"76","messageId":"77","endLine":2,"endColumn":64},{"ruleId":"74","severity":1,"message":"80","line":2,"column":66,"nodeType":"76","messageId":"77","endLine":2,"endColumn":79},{"ruleId":"81","severity":1,"message":"82","line":13,"column":15,"nodeType":"83","messageId":"84","endLine":13,"endColumn":62},{"ruleId":"81","severity":1,"message":"82","line":13,"column":15,"nodeType":"83","messageId":"84","endLine":13,"endColumn":62},{"ruleId":"81","severity":1,"message":"82","line":14,"column":15,"nodeType":"83","messageId":"84","endLine":14,"endColumn":63},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Fragment' is defined but never used.","'useParams' is defined but never used.","'useRouteMatch' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression"]